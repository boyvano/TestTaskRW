@using Microsoft.AspNetCore.Identity
@*@inject SignInManager<IdentityUser> SignInManager
    @inject UserManager<IdentityUser> UserManager*@

<ul class="navbar-nav">
    @if (User.Identity.IsAuthenticated)
    {
        <li class="nav-item">
            @if (User.IsInRole("Admin"))
            {
                <a class="nav-link text-white" asp-area="" asp-controller="Users" asp-action="Index" title="Manage"> @User.Identity.Name 
                    <i class="fa fa-user-doctor"></i></a>
            }
            else
            {
                <a class="nav-link text-white" asp-area="" asp-controller="Users" asp-action="Edit" title="Manage" asp-route-id="" asp-route-name="@User.Identity.Name"> @User.Identity.Name 
                    <i class="fa fa-regular fa-user-circle"></i></a>
            }

        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="" asp-controller="Account" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-white">Выход</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-white" asp-area="" asp-controller="Account" asp-action="Register">Регистрация</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-white" asp-area="" asp-controller="Account" asp-action="Login">Вход</a>
        </li>
    }
</ul>
